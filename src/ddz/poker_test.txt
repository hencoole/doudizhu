


dfx canister call ddz getBytes


dfx canister call ddz hashmap_put

dfx canister call ddz two_array

dfx canister call ddz poker_test

dfx canister call ddz register '("test123")'

dfx canister call ddz poker_compare '(vec{0x22},vec{0x27})'
dfx canister call ddz poker_compare '(vec{0x24},vec{0x17})'
dfx canister call ddz poker_compare '(vec{0x22},vec{0x4F})'
dfx canister call ddz poker_compare '(vec{0x21},vec{0x4E})'
dfx canister call ddz poker_compare '(vec{0x4E},vec{0x4F})'
dfx canister call ddz poker_compare '(vec{0x4F},vec{0x4E})'
dfx canister call ddz poker_compare '(vec{0x4F},vec{0x21})'
dfx canister call ddz poker_compare '(vec{0x4F},vec{0x08;0x18;0x28;0x38})'
dfx canister call ddz poker_compare '(vec{0x22},vec{0x4E;0x4F})'

dfx canister call ddz poker_compare '(vec{0x21;0x11},vec{0x4E;0x12})'
dfx canister call ddz poker_compare '(vec{0x21;0x11},vec{0x12})'
dfx canister call ddz poker_compare '(vec{0x21;0x11},vec{0x1D;0x2D})'
dfx canister call ddz poker_compare '(vec{0x1D;0x2D},vec{0x21;0x11})'
dfx canister call ddz poker_compare '(vec{0x1D;0x2D},vec{0x22;0x12})'
dfx canister call ddz poker_compare '(vec{0x1D;0x2D},vec{0x08;0x18;0x28;0x38})'
dfx canister call ddz poker_compare '(vec{0x1D;0x2D},vec{0x4E;0x4F})'

dfx canister call ddz poker_compare '(vec{0x24;0x25;0x26;0x27;0x28},vec{0x13;0x14;0x15;0x16;0x17})'
dfx canister call ddz poker_compare '(vec{0x13;0x14;0x15;0x16;0x17}, vec{0x24;0x25;0x26;0x27;0x28})'
dfx canister call ddz poker_compare '(vec{0x13;0x14;0x15;0x16;0x17}, vec{0x08;0x18;0x28;0x38})'
dfx canister call ddz poker_compare '(vec{0x13;0x14;0x15;0x16;0x17}, vec{0x4E;0x4F})'


dfx canister call ddz poker_compare '(vec{0x13;0x23;0x14;0x24;0x15;0x25}, vec{0x1C;0x2C;0x1D;0x2D;0x11;0x21})'
dfx canister call ddz poker_compare '(vec{0x13;0x23;0x14;0x24;0x15;0x25}, vec{0x1D;0x2D;0x11;0x21;0x12;0x22})'
dfx canister call ddz poker_compare '(vec{0x13;0x23;0x14;0x24;0x15;0x25}, vec{0x08;0x18;0x28;0x38})'
dfx canister call ddz poker_compare '(vec{0x13;0x23;0x14;0x24;0x15;0x25}, vec{0x4E;0x4F})'

dfx canister call ddz poker_compare '(vec{0x08;0x18;0x28;0x39;0x29}, vec{0x03;0x13;0x23;0x16;0x26})'
dfx canister call ddz poker_compare '(vec{0x03;0x13;0x23;0x16;0x26}, vec{0x08;0x18;0x28;0x39;0x29})'
dfx canister call ddz poker_compare '(vec{0x08;0x18;0x28;0x39}, vec{0x03;0x13;0x23;0x16})'
dfx canister call ddz poker_compare '(vec{0x03;0x13;0x23;0x16}, vec{0x08;0x18;0x28;0x39})'
dfx canister call ddz poker_compare '(vec{0x03;0x13;0x23;0x16;0x26}, vec{0x08;0x18;0x28;0x38})'
dfx canister call ddz poker_compare '(vec{0x08;0x18;0x28;0x38}, vec{0x03;0x13;0x23;0x16;0x26})'
dfx canister call ddz poker_compare '(vec{0x03;0x13;0x23;0x16;0x26}, vec{0x4E;0x4F})'


dfx canister call ddz poker_compare '(vec{0x09;0x19;0x29;0x39;0x21;0x23}, vec{0x4E;0x4F})'
dfx canister call ddz poker_compare '(vec{0x09;0x19;0x29;0x39;0x01;0x03}, vec{0x08;0x18;0x28;0x38})'
dfx canister call ddz poker_compare '(vec{0x08;0x18;0x28;0x38}, vec{0x09;0x19;0x29;0x39;0x01;0x03})'
dfx canister call ddz poker_compare '(vec{0x09;0x19;0x29;0x39;0x22;0x2A}, vec{0x01;0x11;0x21;0x31;0x25;0x23})'
dfx canister call ddz poker_compare '(vec{0x01;0x11;0x21;0x31;0x25;0x23}, vec{0x09;0x19;0x29;0x39;0x22;0x2A})'

dfx canister call ddz poker_compare '(vec{0x09;0x19;0x29;0x39;0x21;0x01;0x23;0x03}, vec{0x4E;0x4F})'
dfx canister call ddz poker_compare '(vec{0x09;0x19;0x29;0x39;0x21;0x01;0x23;0x03}, vec{0x08;0x18;0x28;0x38})'




  
  switch(num) {
    //空牌
    case 0 {null};
    //单牌
    case 1 {#Single};
    case 2 {
      //火箭
      if ((cards[0]==0x4F) and (cards[1]==0x4E)) {#Missile};
      
      //对牌
			if (get_card_value(cards[0])==get_card_value(cards[1])) {#Double};
      
      //错误牌
      null
    };
  };
  
    if (num == 0) { return #Error;};
  if (num == 1) { return #Single;};
  if (num == 2) {
    //火箭
      if ((cards[0]==0x4F) and (cards[1]==0x4E)) { return #Missile;};
      
      //对牌
			if (get_card_value(cards[0])==get_card_value(cards[1])) {return #Double;};
      
      //错误牌
      #Error
  };